const User = require("../models/userSchema");
const follow = require("../models/followerinsSchema");

async function followRequest(req, res) {
  if (req.id !== req.params.id) {
    try {
      // user for which follow request has been generated by currUser
      const user = await User.findById(req.params.id);
      const currUser = await User.findById(req.id);

      const checkIfAlreadyFollows = await follow.findOne({
        follower: { $eq: req.id },
        following: { $eq: req.params.id },
      });

      if (!checkIfAlreadyFollows) {
        const newfollower = new follow({
          follower: req.id,
          following: req.params.id,
        });

        const name = user.userName;

        await newfollower.save();

        const currUserEmail = String(currUser.email);

        await User.updateOne(
          { email: currUserEmail },
          { $inc: { following: 1 } }
        );

        const userEmail = String(user.email);

        await User.updateOne({ email: userEmail }, { $inc: { followers: 1 } });

        return res
          .status(201)
          .json({ message: `You have started following ${name}` });
      } else
        return res
          .status(403)
          .json({ message: "You Already following this person" });
    } catch (error) {
      console.log(error);
      return res.status(501).json({ message: "Internal Server Error" });
    }
  } else {
    return res.json("You cann't follow yourself");
  }
}

async function unFollowRequest(req, res) {
  if (req.id !== req.params.id) {
    try {
      // user for which follow request has been generated by currUser
      const user = await User.findById(req.params.id);
      const currUser = await User.findById(req.id);

      const checkIfAlreadyFollows = await follow.findOne({
        follower: { $eq: req.id },
        following: { $eq: req.params.id },
      });

      if (checkIfAlreadyFollows) {
        await follow.findByIdAndDelete(checkIfAlreadyFollows._id);

        // update # of followers and following in user's and currUser's profiles
        const name = user.userName;
        const currUserEmail = String(currUser.email);
        await User.updateOne(
          { email: currUserEmail },
          { $inc: { following: -1 } }
        );
        const userEmail = String(user.email);
        await User.updateOne({ email: userEmail }, { $inc: { followers: -1 } });

        // return acknowledgement of update
        return res
          .status(201)
          .json({ message: `You have no longer following ${name}` });
      } else
        return res
          .status(403)
          .json({ message: "You are not following this person" });
    } catch (error) {
      console.log(error);
      return res.status(501).json({ message: "Internal Server Error" });
    }
  } else {
    return res.json("You cann't unfollow yourself");
  }
}

module.exports = { followRequest, unFollowRequest };
